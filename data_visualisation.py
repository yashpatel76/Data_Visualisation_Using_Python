# -*- coding: utf-8 -*-
"""Data Visualisation.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1RB_w26UMErsWmAWmcHIOFjfuMuMRJY79

# **DATA** **COLLECTION**
"""

import pandas as pd
import numpy as np

from google.colab import files
uploaded = files.upload()

#load the dataset
df = pd.read_csv('titanic.csv')
df.head()

df.info()

df.shape

df.describe()

#Categorical columns
cat_col = [col for col in df.columns if df[col].dtype == 'object']
print('Categorical columns :', cat_col)

#Numerical columns
num_col = [col for col in df.columns if df[col].dtype != 'object']
print('Numerical columns : ',num_col)

#Checking for missing values
df.isnull().sum()

df.duplicated().sum()

#Filling missing values
df['Age'].fillna(df['Age'].median(), inplace=True)
df['Embarked'].fillna(df['Embarked'].mode()[0], inplace=True)

#drop cabin column as Data Cleaning
df.drop(columns='Cabin', inplace=True)

#Converting categorical variable
df['Sex'] = df['Sex'].map({'male': 0, 'female':1})
df = pd.get_dummies(df, columns=['Embarked'], drop_first=True)

#Normalization
#from sklearn.preprocessing import StandardScaler

#Scaler = StandardScaler()
#df[['Age','Fare']] = Scaler.fit_transform(df[['Age','Fare']])

print(df.head())

df.isnull().sum()

"""# **DATA VISUALIZAING**"""

import matplotlib.pyplot as plt
import seaborn as sns


#create a boxplot
plt.boxplot(df['Age'], vert=False)

#add labels and title
plt.ylabel('Variable')
plt.xlabel('Age')
plt.title('box plot')

#show the plot
plt.show()

import seaborn as sns
import matplotlib.pyplot as plt

#calculate the value counts for  'Embarked' column
embarked_counts=df['Embarked'].value_counts()

#data for the donut chart
labels=['Southampton','Cherbourg','Queentown'] #citynames

#create a color palette
color=sns.color_palette('pastel')

#create a donut chart with Seaborn
plt.figure(figsize=(4,4))
plt.pie(sizes)

"""Correlation Analysis Understanding Relationships between Features"""

#Group By Analysis
#print (df.groupby('Survived').mean())

#Correlation Analysis
sns.pairplot(df, hue='Survived', diag_kind='kde')

#show the plot
plt.show()

"""Age Distribution Plot"""

#create a histogram
plt.hist(df['Age'], bins=20, color='skyblue', edgecolor='black')

#add labels and title
plt.xlabel('Age')
plt.ylabel('Frequency')
plt.title('Distribution of age')

#show the plot
plt.show()

"""Number of Male and Female Passengers"""

sns.countplot(data=df, x='Sex', palette='pastel', hue='Sex', legend=False)

#add labels and title
plt.xlabel('Sex')
plt.ylabel('Count')
plt.title('Number of Male and Female Passengers')

#show the plot
plt.show()

plt.figure(figsize=(10,6))
plt.pie('sex', label=['Male','Female'],autopct='%.1f%%',colors=['lightblue','pink'])
plt.legend()
plt.title('Male & Female')
plt.show()

"""Survivors by Gender"""

#create a count  plot
sns.countplot(data=df, x='Survived', hue='Sex', palette='pastel')

#replace x-axis label 0 and 1  with 'No and 'Yes'
plt.xticks(ticks=[0,1], labels=['No','Yes'])

#add labels and title
plt.xlabel('Survived')
plt.ylabel('Count')
plt.title('Survived by Gender')

#showing plot
plt.show()

"""Survivors by Age Class"""

import pandas as pd
import seaborn as sns
import matplotlib.pyplot as plt

#define age ranges for each class
age_bins=[0,18,35,df['Age'].max()]
age_labels=['Children','Youngsters','Old Age']

#Categorize ages into  classes without creating a new column
df['Age']=pd.cut(df['Age'],bins=age_bins,labels=age_labels, right=False)

#create a bar plot
sns.countplot(data=df,x='Age',hue='Survived',palette='pastel')

#add labels and title
plt.xlabel('Survived')
plt.ylabel('Count')
plt.title('Survived by Age Class')

#Show the plot
plt.show()